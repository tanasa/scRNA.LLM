# -*- coding: utf-8 -*-
"""CZI_AIDO.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1axe_ix1y73PgB1uBbIk0fGiwhcT891t2

# Quick Start: AIDO.Cell

**Estimated time to complete**: under 10 minutes (A100 GPU system)

**Google Colab Note:** This notebook requires A100 GPU only included with Google Colab Pro or Enterprise paid services.
Alternatively, a "pay as you go" option is available to purchase premium GPUs. See [Colab Service Plans](https://colab.research.google.com/signup?utm_source=notebook_settings&utm_medium=link&utm_campaign=premium_gpu_selector) for details.

## Learning Goals

*   Install ModelGenerator, a plug-and-play framework for using AIDO.Cell models
*   Download a single-cell RNA dataset from the Gene Expression Omnibus (GEO) repository
*  Preprocess data
*  Generate embeddings using the pre-trained AIDO.Cell-3M model

## Pre-requisites

*   A100 GPU or equivalent
*   Python 3.10 or Python 3.11

## Introduction

### Model
The AIDO.Cell models are a family of scalable transformer-based models that were trained on 50 million cells spanning a diverse set of human tissues and organs. The models aim to learn accurate and general representations of the human cell's entire transcriptional context and can be used for various tasks including zero-shot clustering, cell type classification, and perturbation modeling. This quickstart implements AIDO.Cell-3M, the smallest variant of the AIDO.Cell models, to embedd single-cell RNA data.

AIDO.Cell was designed for use with the ModelGenerator CLI. It is strongly recommended to use ModelGenerator for running AIDO.Cell models. For more information, check out:

*   [Using ModelGenerator to finetune AIDO.Cell](https://github.com/genbio-ai/ModelGenerator/blob/6ad2e776749e506525d5a4c3d8ef0dfdb87d2664/experiments/AIDO.Cell/tutorial_cell_classification.ipynb)
*  [ ModelGenerator Docs](https://genbio-ai.github.io/ModelGenerator/)


### Example Dataset
The GEO dataset used in this quickstart includes single-cell RNA data obtained from colon biopsies collected from patients with ulcerative colatis (UC) and Chron's disease (CD). The dataset also includes samples from a healthy control (HC).

## Setup

The steps below will install the required ModelGenerator package and associated dependencies and download the example dataset and model checkpoint. It may take a few minutes to download all the files.


### Setup Google Colab

To run this quickstart using Google Colab, you will need to choose the 'A100' GPU runtime from the "Connect" dropdown menu in the upper-right corner of this notebook. Note that this runtime configuration is not available in the free Colab version. To access premium GPUs, you will need to purchase additional compute units. The current quickstart was tested in Colab Enterprise using the following runtime configuration:

*   Machine type: a2-highgpu-1g
*   GPU type: NVIDIA_TESLA_A100 x 1
*   Data disk type:100 GB Standard Disk (pd-standard)


### Setup Local Environment

ModelGenerator is an open-source and convenient plug-and-play software stack to run AIDO.Cell moldels. It automatically interfaces with Hugging Face and allows easy one-command embedding and adaptation of the models for a wide variety of fine-tuning tasks. To run ModelGenerator, the GPU must be ampere-generation or later to support flash attention (e.g., A100, H100).

### Step 1: Install ModelGenerator and required dependencies
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/genbio-ai/ModelGenerator.git
# %cd ModelGenerator
!pip install -e ".[flash_attn]"
!pip install -r requirements.txt
# %cd experiments/AIDO.Cell

# Commented out IPython magic to ensure Python compatibility.
# Restart the session after installing

# Then navigate back to the AIDO.Cell directory
# %cd ModelGenerator/experiments/AIDO.Cell

"""### Step 2: Download example dataset from GEO and load into anndata"""

# Commented out IPython magic to ensure Python compatibility.
# %%bash
# mkdir -p data
# cd data
# wget -nv -O GSE214695.tar 'http://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE214695&format=file'
# tar -xvf GSE214695.tar
# cd ..

import anndata as ad
import scanpy as sc

adata = sc.read_10x_mtx('data', prefix='GSM6614348_HC-1_')
sc.pp.filter_cells(adata, min_genes=500)
sc.pp.filter_genes(adata, min_cells=3)
# No more normalization needed, AIDO.Cell uses raw counts

"""### Step 3: Preprocess the anndata for AIDO.Cell"""

import cell_utils
aligned_adata, attention_mask = cell_utils.align_adata(adata)

"""### Step 4: Generate AIDO.Cell embeddings"""

# Embed
import anndata as ad
import numpy as np
import torch
import sys
from modelgenerator.tasks import Embed

# The following is equivalent to the ModelGenerator CLI command:
# mgen predict --model Embed --model.backbone aido_cell_3m \
#   --data CellClassificationDataModule --data.test_split_files <your_anndata>.h5ad

# If not using mgen, this should be configured manually.
device = 'cuda'
batch_size = 2

model = Embed.from_config({
        "model.backbone": "aido_cell_3m",
        "model.batch_size": batch_size
    }).eval()
model = model.to(device).to(torch.bfloat16)

# All data must be in bfloat16
batch_np = aligned_adata[:batch_size].X.toarray()
batch_tensor = torch.from_numpy(batch_np).to(torch.bfloat16).to(device)
# Call transform and embed.
batch_transformed = model.transform({'sequences': batch_tensor})
embs = model(batch_transformed)

# Full Embeddings
print('FULL EMBEDDING')
print('(batch_size, genes, embedding_dim)')
print(embs.shape)
print(embs)
print('-------------------------------------')

# Non-Zero Genes Embeddings
print('NON-ZERO GENES EMBEDDING')
embs = embs[:, attention_mask.astype(bool), :]
print('(batch_size, genes, embedding_dim)')
print(embs.shape)
print(embs)



"""# Contacts and Acknowledgements

For issues with this tutorial please contact virtualcellmodels@chanzuckerberg.com or Caleb Ellington at caleb.ellington@genbio.ai.

Thanks to Caleb Ellington, all the AIDO.Cell model developers, and the [GenBio AI](https://genbio.ai/) team for creating and supporting this resource.

# Responsible Use

We are committed to advancing the responsible development and use of artificial intelligence. Please follow our [Acceptable Use Policy](https://virtualcellmodels.cziscience.com/acceptable-use-policy) when engaging with our services.
"""